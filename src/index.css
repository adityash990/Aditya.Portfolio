@tailwind base;
@tailwind components;
@tailwind utilities;

/* Import a more sophisticated font */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');

* {
  font-family: 'Inter', system-ui, -apple-system, sans-serif;
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

/* Enhanced animations */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(50px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes expand {
  from {
    width: 0;
  }
  to {
    width: 8rem;
  }
}

@keyframes skillBar {
  from {
    width: 0%;
  }
  to {
    width: var(--target-width);
  }
}

@keyframes skillBarHover {
  from {
    width: 0%;
  }
  to {
    width: 100%;
  }
}

@keyframes scrollHorizontal {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px) translateX(0px);
  }
  25% {
    transform: translateY(-20px) translateX(10px);
  }
  50% {
    transform: translateY(-10px) translateX(-10px);
  }
  75% {
    transform: translateY(-30px) translateX(5px);
  }
}

@keyframes floatReverse {
  0%, 100% {
    transform: translateY(0px) translateX(0px);
  }
  25% {
    transform: translateY(20px) translateX(-10px);
  }
  50% {
    transform: translateY(10px) translateX(10px);
  }
  75% {
    transform: translateY(30px) translateX(-5px);
  }
}

@keyframes floatDiagonal {
  0%, 100% {
    transform: translateY(0px) translateX(0px);
  }
  25% {
    transform: translateY(-15px) translateX(15px);
  }
  50% {
    transform: translateY(15px) translateX(-15px);
  }
  75% {
    transform: translateY(-25px) translateX(25px);
  }
}

@keyframes cornerLight {
  0%, 100% {
    opacity: 0.05;
    transform: scale(1);
  }
  50% {
    opacity: 0.1;
    transform: scale(1.2);
  }
}

@keyframes pulseSlow {
  0%, 100% {
    opacity: 0.01;
  }
  50% {
    opacity: 0.03;
  }
}

@keyframes bounceSlow {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

@keyframes typingEnhanced {
  from,
  to {
    width: 0;
  }
  10%,
  90% {
    width: 100%;
  }
}

@keyframes blinkCaret {
  from,
  to {
    border-color: transparent;
  }
  50% {
    border-color: black;
  }
}

/* NEW ENHANCED ANIMATIONS */
@keyframes morphingBlob {
  0%, 100% {
    border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
    transform: translate(0, 0) rotate(0deg);
  }
  25% {
    border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
    transform: translate(30px, -50px) rotate(90deg);
  }
  50% {
    border-radius: 50% 60% 30% 60% / 30% 60% 70% 40%;
    transform: translate(-20px, 20px) rotate(180deg);
  }
  75% {
    border-radius: 60% 40% 60% 30% / 40% 70% 60% 30%;
    transform: translate(50px, 30px) rotate(270deg);
  }
}

@keyframes particleFloat {
  0%, 100% {
    transform: translateY(0px) translateX(0px) scale(1);
    opacity: 0.3;
  }
  33% {
    transform: translateY(-100px) translateX(50px) scale(1.2);
    opacity: 0.6;
  }
  66% {
    transform: translateY(-50px) translateX(-30px) scale(0.8);
    opacity: 0.4;
  }
}

@keyframes gradientShift {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

@keyframes ripple {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  100% {
    transform: scale(4);
    opacity: 0;
  }
}

@keyframes geometricRotate {
  0% {
    transform: rotate(0deg) scale(1);
  }
  25% {
    transform: rotate(90deg) scale(1.1);
  }
  50% {
    transform: rotate(180deg) scale(0.9);
  }
  75% {
    transform: rotate(270deg) scale(1.05);
  }
  100% {
    transform: rotate(360deg) scale(1);
  }
}

@keyframes lightBeam {
  0% {
    transform: translateX(-100%) skewX(-15deg);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateX(100%) skewX(-15deg);
    opacity: 0;
  }
}

@keyframes neuralNetwork {
  0%, 100% {
    stroke-dashoffset: 0;
    opacity: 0.3;
  }
  50% {
    stroke-dashoffset: -50;
    opacity: 0.8;
  }
}

/* Animation classes */
.animate-fade-in-up {
  animation: fadeInUp 1s ease-out forwards;
}

.animate-fade-in-left {
  animation: fadeInLeft 1s ease-out forwards;
}

.animate-fade-in-right {
  animation: fadeInRight 1s ease-out forwards;
}

.animate-fade-in {
  animation: fadeIn 0.8s ease-out forwards;
}

.animate-expand {
  animation: expand 1.5s ease-out forwards;
}

.animate-skill-bar {
  animation: skillBar 2s ease-out forwards;
}

.animate-skill-bar-hover {
  animation: skillBarHover 1s ease-out forwards;
}

.animate-scroll-horizontal {
  animation: scrollHorizontal 30s linear infinite;
}

.animate-float-slow {
  animation: float 8s ease-in-out infinite;
}

.animate-float-reverse {
  animation: floatReverse 10s ease-in-out infinite;
}

.animate-float-diagonal {
  animation: floatDiagonal 12s ease-in-out infinite;
}

.animate-corner-light {
  animation: cornerLight 4s ease-in-out infinite;
}

.animate-corner-light-delay {
  animation: cornerLight 4s ease-in-out infinite 1s;
}

.animate-corner-light-reverse {
  animation: cornerLight 4s ease-in-out infinite 2s;
}

.animate-corner-light-delay-reverse {
  animation: cornerLight 4s ease-in-out infinite 3s;
}

.animate-pulse-slow {
  animation: pulseSlow 4s ease-in-out infinite;
}

.animate-bounce-slow {
  animation: bounceSlow 3s ease-in-out infinite;
}

/* NEW ENHANCED ANIMATION CLASSES */
.animate-morphing-blob {
  animation: morphingBlob 20s ease-in-out infinite;
}

.animate-particle-float {
  animation: particleFloat 15s ease-in-out infinite;
}

.animate-gradient-shift {
  animation: gradientShift 8s ease-in-out infinite;
  background-size: 400% 400%;
}

.animate-ripple {
  animation: ripple 2s ease-out infinite;
}

.animate-geometric-rotate {
  animation: geometricRotate 25s linear infinite;
}

.animate-light-beam {
  animation: lightBeam 3s ease-in-out infinite;
}

.animate-neural-network {
  animation: neuralNetwork 4s ease-in-out infinite;
}

.animation-delay-300 {
  animation-delay: 300ms;
}

.animation-delay-600 {
  animation-delay: 600ms;
}

.animation-delay-900 {
  animation-delay: 900ms;
}

.animation-delay-1200 {
  animation-delay: 1200ms;
}

.animation-delay-1500 {
  animation-delay: 1500ms;
}

.animation-delay-2000 {
  animation-delay: 2000ms;
}

.animation-delay-3000 {
  animation-delay: 3000ms;
}

.animation-delay-4000 {
  animation-delay: 4000ms;
}

.typing-animation-enhanced {
  border-right: 3px solid black;
  animation: typingEnhanced 6s steps(50, end) infinite, blinkCaret 1s step-end infinite;
  white-space: nowrap;
  overflow: hidden;
  display: inline-block;
}

/* Enhanced Background Effects */
.bg-neural-pattern {
  background-image: 
    radial-gradient(circle at 25% 25%, rgba(0,0,0,0.02) 2px, transparent 2px),
    radial-gradient(circle at 75% 75%, rgba(0,0,0,0.02) 2px, transparent 2px);
  background-size: 50px 50px;
}

.bg-geometric-pattern {
  background-image: 
    linear-gradient(45deg, rgba(0,0,0,0.01) 25%, transparent 25%),
    linear-gradient(-45deg, rgba(0,0,0,0.01) 25%, transparent 25%),
    linear-gradient(45deg, transparent 75%, rgba(0,0,0,0.01) 75%),
    linear-gradient(-45deg, transparent 75%, rgba(0,0,0,0.01) 75%);
  background-size: 30px 30px;
  background-position: 0 0, 0 15px, 15px -15px, -15px 0px;
}

.bg-gradient-mesh {
  background: 
    radial-gradient(ellipse at top left, rgba(0,0,0,0.02) 0%, transparent 50%),
    radial-gradient(ellipse at top right, rgba(0,0,0,0.01) 0%, transparent 50%),
    radial-gradient(ellipse at bottom left, rgba(0,0,0,0.015) 0%, transparent 50%),
    radial-gradient(ellipse at bottom right, rgba(0,0,0,0.025) 0%, transparent 50%);
}

/* Glass morphism effects */
.glass-effect {
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.glass-effect-dark {
  background: rgba(0, 0, 0, 0.05);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(0, 0, 0, 0.1);
}

/* Particle system */
.particle {
  position: absolute;
  width: 4px;
  height: 4px;
  background: rgba(0, 0, 0, 0.1);
  border-radius: 50%;
  pointer-events: none;
}

.particle-1 { animation: particleFloat 12s ease-in-out infinite; }
.particle-2 { animation: particleFloat 15s ease-in-out infinite 2s; }
.particle-3 { animation: particleFloat 18s ease-in-out infinite 4s; }
.particle-4 { animation: particleFloat 14s ease-in-out infinite 6s; }
.particle-5 { animation: particleFloat 16s ease-in-out infinite 8s; }

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
}

::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #555;
}

/* Selection color */
::selection {
  background: rgba(0, 0, 0, 0.1);
  color: black;
}

/* Focus states */
button:focus,
a:focus,
input:focus,
textarea:focus {
  outline: 2px solid black;
  outline-offset: 2px;
}

/* Responsive utilities */
@media (max-width: 768px) {
  .typing-animation-enhanced {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }
}

/* Print styles */
@media print {
  .no-print {
    display: none !important;
  }
}